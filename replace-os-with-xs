Problem Link : https://bit.ly/3QyPr5g
import java.util.*;

public class Main {
    public static void main(String[] args) {
      Scanner sc=new Scanner(System.in);
      int m=sc.nextInt();
      int n=sc.nextInt();
      sc.nextLine();
      char mat[][]=new char[m][n];
      for(int i=0;i<m;i++)
        for(int j=0;j<n;j++)
          mat[i][j]=sc.next().charAt(0);
          
      Solution.fill(m,n,mat);
  }
}

class Pair{
    int row,col;
    Pair(int row,int col){
        this.row=row;
        this.col=col;
    }
}

class Solution{
    static void fill(int m, int n, char a[][])
    {
        m=a.length;
        n=a[0].length;
        char ans[][]=new char[m][n];
        boolean visited[][]=new boolean[m][n];
        Queue<Pair> q=new LinkedList<>();
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(a[i][j]=='O' && (i==0 || j==0 ||i==m-1 || j==n-1))
                    q.offer(new Pair(i,j));
            }
        }
        
        int arr1[]={0,1,-1,0};
        int arr2[]={1,0,0,-1};
        
        while(!q.isEmpty()){
            int r=q.peek().row;
            int c=q.peek().col;
            q.poll();
            if(!visited[r][c]){
                visited[r][c]=true;
                for(int i=0;i<4;i++){
                    int nr=r+arr1[i];
                    int nc=c+arr2[i];
                    if(nr>=0 && nr<m && nc>=0 && nc<n && a[nr][nc]=='O' && !visited[nr][nc]){
                        q.offer(new Pair(nr,nc));
                    }
                }
            }
        }
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(a[i][j]=='O' && !visited[i][j]) a[i][j]='X';
                System.out.print(a[i][j]+" ");
            }
            System.out.println();
        }
        
    }
}
